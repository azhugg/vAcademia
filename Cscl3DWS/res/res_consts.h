#pragma once

namespace res
{
#define RES_REMOTE      0x00000001
#define RES_LOCAL		0x00000002
//#define RES_CDROM       0x00000004
#define RES_UPLOAD		0x00000008
#define RES_ONLY_CACHE	0x00000010
#define RES_TO_WRITE	0x00000100
#define RES_CREATE	    0x00000200
#define RES_MEM_CACHE	0x00000400
#define RES_FILE_CACHE  0x00000800
#define RES_ASYNCH	    0x00001000
#define RES_CACHE_READ  0x00004000
#define RES_MODULE_PACK	0x00008000
//#define RES_IGNORE_CHECK_LIST  0xF0F0F0F0
#define RES_NOT_SAVE_TO_CACHE	0x00000020
#define RES_FILE_OPERATING_AT_SERVER	0x00000030

#define RES_XML			(RES_MEM_CACHE)
#define RES_GRAPHIC	    (RES_FILE_CACHE | RES_CACHE_READ)

#define RES_CONNECT_HTTP	1
#define RES_CONNECT_SOCKET	2
#define RES_BEGIN 0
#define RES_CURRENT 1
#define RES_END 2
#define RES_EXISTS (RES_REMOTE | RES_LOCAL | RES_UPLOAD)
#define RES_ANYWHERE RES_EXISTS
#define RES_IS_EXISTS(aStatus) ((aStatus & RES_EXISTS) != 0)
#define RES_IS_NOT_EXISTS(aStatus) ((aStatus & RES_EXISTS) == 0)
#define RES_MODULE_READY 0x00002000
#define MDL_FLAGS        0x00FF0000
#define MDL_META         0x00010000
#define MDL_MODULE       0x00020000
#define MDL_PACKED       0x00040000
#define RES_PATH_ERROR   0x01000000
#define RES_SCRIPT_ERROR 0x02000000
#define RES_SERVER_ERROR 0x03000000
#define RES_QUERY_ERROR  0x04000000
#define RES_READ_ERROR   0x05000000
#define RES_WRITE_ERROR  0x06000000
#define RES_UNPACK_ERROR 0x07000000
#define RES_MODULE_ERROR 0x08000000
#define RES_ACCESS_ERROR 0x09000000
#define RES_CLOSED       0x0A000000
#define RES_MODULE_NOT_READY 0x0B000000
#define RES_COM_ERROR    0x0C000000
#define RES_METADATA_ERROR   0x0D000000
#define RES_SERVER_ERROR_TIMEOUT 0xEE000000
#define RES_SERVER_ERROR_NOTCONNECT 0xE0E00000
#define RES_ERROR        0xFF000000
#define RES_GET_ERROR( aStatus) (aStatus & RES_ERROR)
#define RES_IS_ERROR( aStatus) ((aStatus & RES_ERROR) != 0)
#define RN_ASYNCH_DOWNLOADED	0x00000001
#define RN_ASYNCH_CACHED		0x00000002
#define RN_ASYNCH_UNPACKED		0x00000003
#define RN_ASYNCH_UPLOADED		0x00000004
#define RN_ASYNCH_REGISTERED	0x00000005
#define RN_DOWNLOAD_ERROR		0x00010000
#define RN_UPLOAD_ERROR			0x00020000
#define RN_OPERATE_ERROR		0x00040000
#define RN_REGISTERED_ERROR		0x00080000
#define USES_FAILED_EX BOOL __failedEx__ = FALSE
inline bool FAILED_EX( long aStatus, unsigned long& aError) {
	bool __failedEx__ = (long(aStatus)<0);
	if (__failedEx__)
		aError = ((aError & ~RES_ERROR) | RES_COM_ERROR);
	return __failedEx__;
}
#define SUCCEEDED_EX( aStatus, aError) (!FAILED_EX( aStatus, aError))
}